#!/usr/bin/ruby
#
# \par Brief Description


require 'tvrover_t'
require "vlc_restreamer_t"
require 'rubygems'
require 'json'
require 'pp'

#rstream_arr	= Tvrover.parse_onepage("world/France"	, "http://www.tvrover.com/france/tv-france.html")
#rstream_arr	= Tvrover.parse_onepage("world/Belgium"	, "http://www.tvrover.com/belgium/tv-belgium.html")
#rstream_arr	= Tvrover.parse_onepage("world/Argentina", "http://www.tvrover.com/argentina/tv-argentina.html")
rstream_arr	= Tvrover.parse_onepage("world"		, "http://www.tvrover.com")
#rstream_arr	= Tvrover.parse_onepage("world/USA"	, "http://www.tvrover.com/usa/tv-usa.html")
#rstream_arr	= Tvrover.parse_onepage("world/Columbia", "http://www.tvrover.com/columbia/tv-columbia.html")

#pp rstream_arr
#puts JSON.pretty_generate(rstream_arr)
#exit

#pp rstream_arr
puts "contains #{rstream_arr.length} rstreams restreamable or not"

# remove all rstream which are not restreamable
rstream_arr.delete_if { |item|
	puts "testing #{item['human_name']} at #{item['location']}"

	vlc_uri_src	= item['stream_uri']
	may_restream	= Neoip::Videolan_t.may_restream?(vlc_uri_src)
	puts "#{vlc_uri_src} may_restream=#{may_restream}"
	not may_restream
}

# insert an autogenerated cast_name for each item of rstream_arr
rstream_arr.collect! { |item|
	item['cast_name']	= item['human_name'].gsub(' ', '_') + ".flv"
	item
}

pp rstream_arr
puts "contains #{rstream_arr.length} rstreams restreamable"

# output the rstream_arr
$stderr.puts JSON.pretty_generate(rstream_arr)


